@import "variables.scss";
@import "vux-reset.scss";
html,
body{
  width: 100%;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  color: $color_dark;
  font-family: PingFangSC-Regular, "Microsoft Yahei", sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;

}
*{margin: 0; padding: 0; font-weight: normal}
a{
  text-decoration: none;
  &:visited,&:link,&:hover,&:active{
    color: #666;
  }
}
ul li{list-style: none;}
input{border:none;outline:none;color:$color_black}
/* 字体大小 */
$i: 12;
@while $i <= 36 {
  .fs-#{$i} {
    font-size: .01rem * $i!important;
  }
  $i: $i + 2;
}
.display-flex{
  display: -ms-flexbox;
  display: flex;
}
/*行高*/
$j: 20;
@while $j <= 48 {
  .lh-#{$j} {
    line-height: .01rem * $j!important;
  }
  $j: $j + 2;
}
/* 字体颜色 */
.txt-black{color: $color_black;}
.txt-dark{color: $color_dark;}
.txt-gray{color: $color_gray;}
.txt-red{color: $color_red;}
.txt-blue{color: $color_blue}
.txt-white{color: $color_white}
/*textarea/input的placeholder颜色*/
input::-webkit-input-placeholder,textarea::-webkit-input-placeholder{color:$color_gray}
input:-moz-placeholder,textarea:-moz-placeholder{color:$color_gray}
input::-moz-placeholder, textarea::-moz-placeholder{color:$color_gray}
input:-ms-input-placeholder, textarea:-ms-input-placeholder{color:$color_gray}
/*解决input自动填充*/
input:-webkit-autofill {
 -webkit-box-shadow: 0 0 0px 1000px white inset;
 -webkit-text-fill-color: #999;
}
/* 定位方式 */
.fixed-top{position: fixed; top:0;}
.fixed-bottom{position: fixed; bottom: 0;}
.full-screen{width:100%;}

/* 字体对齐 */
.txt-left{text-align: left;}
.txt-center{text-align: center;}
.txt-right{text-align: right;}

/* 背景颜色 */
.bg-red{background-color: $color_red;}
.bg-white{background-color: $color_white;}
.bg-gray{background-color: $color_gray;}
.bg-dark{background-color: $color_dark;}
.bg-black{background-color: $color_black}
.bg-light{background-color: $color_light}

/* 线条 */
.border-top{border-top: #ececec .5px solid;}
.border-bottom{border-bottom: #ececec .5px solid;}
.border-left{border-left: #ececec 1px solid;}
.border-right{border-right: #ececec 1px solid;}
.border-none{border: none!important;}
.full-h{height: 100%;}
/*  1
** felex 布局
** felex布局样式
** Tianming 2017 02 15
*/
/*水平布局*/

.horizontal-view{display: -webkit-box;display: -moz-box;display: -ms-flexbox;display: -webkit-flex;display: flex;-webkit-box-orient: horizontal;-moz-box-orient: horizontal;-webkit-flex-direction: row;-ms-flex-direction: row;flex-direction: row;}
/*垂直布局*/
.vertical-view{display: -webkit-box;display: -moz-box;display: -ms-flexbox;display: -webkit-flex;display: flex;-webkit-box-orient: vertical;-moz-box-orient: vertical;-webkit-flex-direction: column;-ms-flex-direction: column;flex-direction: column;}
/*设置或检索弹性盒子元素在侧轴（纵轴）方向上的对齐方式。*/
/*弹性盒子元素的侧轴（纵轴）起始位置的边界紧靠住该行的侧轴起始边界。*/
.align-items-start {-webkit-box-align: start;-ms-flex-align: start;-webkit-align-items: flex-start;-moz-align-items: flex-start;align-items: flex-start}
/*弹性盒子元素在该行的侧轴（纵轴）上居中放置。（如果该行的尺寸小于弹性盒子元素的尺寸，则会向两个方向溢出相同的长度）。*/
.align-items-center {-webkit-box-align: center;-ms-flex-align: center;-webkit-align-items: center;-moz-align-items: center;align-items: center}
/*弹性盒子元素的侧轴（纵轴）起始位置的边界紧靠住该行的侧轴结束边界。*/
.align-items-end {-webkit-box-align: end;-ms-flex-align: end;-webkit-align-items: flex-end;-moz-align-items: flex-end;align-items: flex-end}
/*如弹性盒子元素的行内轴与侧轴为同一条，则该值与'flex-start'等效。其它情况下，该值将参与基线对齐。*/
.align-items-baseline {-webkit-box-align: baseline;-ms-flex-align: baseline;-webkit-align-items: baseline;-moz-align-items: baseline;align-items: baseline}
/*如果指定侧轴大小的属性值为'auto'，则其值会使项目的边距盒的尺寸尽可能接近所在行的尺寸，但同时会遵照'min/max-width/height'属性的限制。*/
.align-items-stretch {-webkit-box-align: stretch;-moz-box-align: stretch;-ms-flex-align: stretch;-webkit-align-items: stretch;align-items: stretch}
/*设置或检索弹性盒子元素在主轴（横轴）方向上的对齐方式。*/
/*弹性盒子元素将向行起始位置对齐。该行的第一个子元素的主起始位置的边界将与该行的主起始位置的边界对齐，同时所有后续的伸缩盒项目与其前一个项目对齐。*/
.justify-content-start {-webkit-box-pack: start;-moz-box-pack: start;-ms-flex-pack: start;-webkit-justify-content: flex-start;justify-content: flex-start}
/*弹性盒子元素将向行结束位置对齐。该行的第一个子元素的主结束位置的边界将与该行的主结束位置的边界对齐，同时所有后续的伸缩盒项目与其前一个项目对齐。*/
.justify-content-center {-webkit-box-pack: center;-moz-box-pack: center;-ms-flex-pack: center;-webkit-justify-content: center;justify-content: center}
/*弹性盒子元素将向行中间位置对齐。该行的子元素将相互对齐并在行中居中对齐，同时第一个元素与行的主起始位置的边距等同与最后一个元素与行的主结束位置的边距（如果剩余空间是负数，则保持两端相等长度的溢出）。*/
.justify-content-end {-webkit-box-pack: end;-moz-box-pack: end;-ms-flex-pack: end;-webkit-justify-content: flex-end;justify-content: flex-end}
/*弹性盒子元素会平均地分布在行里。如果最左边的剩余空间是负数，或该行只有一个子元素，则该值等效于'flex-start'。在其它情况下，第一个元素的边界与行的主起始位置的边界对齐，同时最后一个元素的边界与行的主结束位置的边距对齐，而剩余的伸缩盒项目则平均分布，并确保两两之间的空白空间相等。*/
.justify-content-space-between{-webkit-box-pack: justify;-moz-box-pack: justify;-ms-flex-pack: justify;-webkit-justify-content: space-between;justify-content: space-between}
/*平分父容器 弹性盒子元素会平均地分布在行里，两端保留子元素与子元素之间间距大小的一半。如果最左边的剩余空间是负数，或该行只有一个伸缩盒项目，则该值等效于'center'。在其它情况下，伸缩盒项目则平均分布，并确保两两之间的空白空间相等，同时第一个元素前的空间以及最后一个元素后的空间为其他空白空间的一半。*/
.justify-content-space-around {-webkit-box-pack: justify;-moz-box-pack: justify;-ms-flex-pack: distribute;-webkit-justify-content: space-around;justify-content: space-around}
/*等宽度对齐flex1*/
.flex1{-webkit-box-flex: 1;-moz-box-flex: 1;-ms-flex: 1;-webkit-flex: 1;flex: 1;}
.flex2{-webkit-box-flex: 2;-moz-box-flex: 2;-ms-flex: 2;-webkit-flex: 4;flex: 2;}
.flex3{-webkit-box-flex: 3;-moz-box-flex: 3;-ms-flex: 3;-webkit-flex: 3;flex: 3;}
.flex4{-webkit-box-flex: 4;-moz-box-flex: 4;-ms-flex: 4;-webkit-flex: 4;flex: 4;}
.txt-ellipsis{white-space: nowrap;overflow: hidden;text-overflow: ellipsis}
.rel{position: relative;}
.space-top{
  margin-top: .22rem;
}
.space-bottom{
  margin-bottom: .22rem;
}
.box-margin{
  margin: .4rem;
}
.wrap{
  margin: 0 .4rem;
}
.box-margin-top{
  margin-top: .4rem;
}
.box-padding{
  padding: .4rem;
  //&~.box-padding{
  //  padding-top: 0;
  //}
}
.full-input{
  border: none;
  width: 100%;
  height: 100%;
  -webkit-appearance: none;

  &,&::-webkit-input-placeholder{
    font-size: .24rem;
  }
}
/***********************************/
/*路由切换动画 大家千万不要动*/
.container{
    width: 100%;
    height: 100%;
    overflow: hidden;
}
.child-view{
    position: absolute;
    left:0;
    top: 0;
    height: 100%;
    width: 100%;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    transition: all .5s cubic-bezier(.55,0,.1,1);
    background-color: #f2f2f2;
    overflow: scroll;
    -webkit-overflow-scrolling: touch;
}
.iphoneX{padding-bottom:1.34rem!important}
.child-view-show{overflow: hidden!important;transition: all 0s cubic-bezier(.55,0,.1,1)!important;padding-bottom:1rem}
.vux-pop-out-enter-active,
.vux-pop-out-leave-active,
.vux-pop-in-enter-active,
.vux-pop-in-leave-active {
  will-change: transform;
  transition: all 500ms;
  height: 100%;
  overflow: hidden;
  position: absolute;
  backface-visibility: hidden;
  perspective: 1000;
}
.vux-pop-out-enter {
  opacity: 0;
  transform: translate3d(-100%, 0, 0);
}
.vux-pop-out-leave-active {
  opacity: 0;
  transform: translate3d(100%, 0, 0);
}
.vux-pop-in-enter {
  opacity: 0;
  transform: translate3d(100%, 0, 0);
}
.vux-pop-in-leave-active {
  opacity: 0;
  transform: translate3d(-100%, 0, 0);
}
/**************************************/
.picker-wrapper{
  position: fixed!important;
}
.pdb46{
  padding-top:45px
}
.content-index{overflow:scroll;height: 100%!important;}

.no-data-text  {
  display: none!important;
}
//html[data-useragent*='Android'] body {
//  .picker-backdrop{ position: fixed!important;}
//}


