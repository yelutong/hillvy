1.?一个200*200的div在不同分辨率屏幕上下左右居中，用css实现

div
{
position:absolute;
width:200px;
height:200px;
top:50%;
left:50%;
margin-left:-100px;
height:-100px;
z-index:1000;
}
2. 写一个左中右布局占满屏幕，其中左右两块是固定宽度200 ，中间自适应宽，要求先加载中间块，请写出结构及样式：
<body>??

????????
<h3>实现三列宽度自适应布局</h3>??

????????
<div?id?=?"left">我是左边</div>??

????????
<div?id?=?"right">我是右边</div>??

????????
<div?id?=?"center">我是中间</div>??


</body>??

?


html,body{?margin:?0px;width:?100%;?}??


h3{height:?100px;margin:20px?0?0;}??


#left,#right{width:?200px;height:?200px;?background-color:?#ffe6b8;position:?absolute;top:120px;}??


#left{left:0px;}??


#right{right:?0px;}??


#center{margin:2px?210px?;background-color:?#eee;height:?200px;?}??
3. 阐述清楚浮动的几种方式（常见问题）

1.父级div定义 height

原理：
父级div手动定义height，就解决了父级div无法自动获取到高度的问题。 

优点：简单、代码少、容易掌握 

缺点：只适合高度固定的布局，要给出精确的高度，如果高度和父级div不一样时，会产生问题


2.父级div定义 overflow:hidden

原理：
必须定义width或zoom:1，同时不能定义height，使用overflow:hidden时，浏览器会自动检查浮动区域的高度 

优点：简单、代码少、浏览器支持好


4.?结尾处加空div标签 clear:both

原理：
添加一个空div，利用css提高的clear:both清除浮动，让父级div能自动获取到高度 

优点：简单、代码少、浏览器支持好、不容易出现怪问题

缺点：不少初学者不理解原理；如果页面浮动布局多，就要增加很多空div，让人感觉很不好
